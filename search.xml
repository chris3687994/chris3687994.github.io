<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>从Travis CL迁移并升级Hexo博客至Github Action</title>
      <link href="/2022/12/16/Migrate-And-Update-Hexo-Blog-From-Travis-Cl-to-Github-Action/"/>
      <url>/2022/12/16/Migrate-And-Update-Hexo-Blog-From-Travis-Cl-to-Github-Action/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>  由于很久没有打理自己的博客了，最近在准备更新一波自己的博客的时候，发现原来自动部署的Travis Cl竟然开始收费。虽然官方说会有免费的方案，但是仔细查阅相关资料后发现，所谓的免费方案只是给你了一些积分，每次部署都会消耗一些积分，不会自动恢复，这就意味着积分用完后，就必须使用付费的方案了。我一看，好家伙！付费方案一个月69刀，这让贫穷的我接受不能，于是乎开始寻找替代方案。最后发现Github推出了类似的服务Github Actions，还是免费的，并且支持私有仓库，这让我眼前一亮，决定将博客的自动化部署迁移到Github Actions中来，并且考虑自动部署的虚拟机的环境兼容性问题，顺便将我的Hexo博客软件版本和主题版本进行升级，避免产生不必要的麻烦。<span id="more"></span></p><h2 id="具体思路">具体思路</h2><ol><li><p>创建新的私有仓库，删除原博客仓库下的source分支</p></li><li><p>创建秘钥，为两个仓库部署秘钥</p></li><li><p>初始化源码仓库，并安装最新版本的Hexo和主题</p></li><li><p>复制主题配置文件，并进行修改</p></li><li><p>添加工作流文件，并进行修改</p></li></ol><h2 id="1-创建源代码项目">1.创建源代码项目</h2><p>  在使用Travis cl自动部署的时候，由于Travis cl不支持私有仓库，博客源代码和渲染后的页面都在一个公开的仓库的不同分支里。有的朋友有不想展示博客源代码的需求，正好Github Actions支持私有仓库这个特性，可以达到这个需求。</p><p>  首先登录自己的Github账号，新建仓库，填写项目名称hexo_source（我这里已经创建好了），选择private，其余可以选择默认，最后点击最下方的Create repository，这样源代码仓库就创建好了。</p><p><img src="https://s2.loli.net/2022/12/17/153WTiORAKhBN96.png" alt="创建新的仓库"></p><p>  然后到原来博客仓库下删除source分支，本人的source分支由于已经删除，此处不再展示。</p><h2 id="2-创建并部署秘钥">2.创建并部署秘钥</h2><p>  创建秘钥的作用是让私有源码仓库（私有）有权限去访问并修改博客仓库（公开），从而完成自动更新。下面使用以下命令创建秘钥：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -f hexo-depoly-key</span><br></pre></td></tr></table></figure><p>  命令执行完成后会生成两个文件：私钥文件<code>hexo-depoly-key</code>和公钥文件<code>hexo-depoly-key.pub</code>。然后进入你的源码仓库（私有），在设置页面下找到Secret标签下的Actions，新建一个Actions Secrets，标题可以命名为HEXO_DEPOLY_KEY，然后将私钥文件<code>hexo-depoly-key</code>内容复制进去，然后保存，然后你会在该页面下看到如图所示内容：</p><p><img src="https://s2.loli.net/2022/12/17/WkvYzPmQZyCHqUb.png" alt="添加私钥"></p><blockquote><p>注意：一定要完整复制，不要有多余的空格</p></blockquote><p>  接着前往你的博客仓库（公开），在设置页面下找到Depoly Keys，然后添加depoly key，名称填写hexo_depoly_pub，内容填写公钥文件<code>hexo-depoly-key</code>里的内容，勾选Allow write access选项后，点击最后的Add key，最后你会在该页面下看到如下图所示内容：<br><img src="https://s2.loli.net/2022/12/17/lvcornbAgOU8d9D.png" alt="添加公钥"></p><blockquote><p>注意：一定要完整复制，不要有多余的空格</p></blockquote><h2 id="3-初始化仓库并升级Hexo和主题">3.初始化仓库并升级Hexo和主题</h2><p>  首先你需要在安装最新版本的<a href="http://nodejs.org/">Node.js</a>，然后在Git Bash里使用<code>npm install -g hexo-cli</code>命令升级到最新的Hexo版本。再前往你的github账号里找到你创建的源码仓库（私有），在code界面里找到这个仓库的下载地址，并复制一些链接，如图所示：</p><p><img src="https://s2.loli.net/2022/12/17/bj9RieUAhoVLCaW.png" alt="复制地址"></p><p>  由于Git软件与仓库的连接已经不再使用用户名密码进行连接，而是使用更为安全SSH连接，因此需要生成一对秘钥，使用<code>ssh-keygen -t rsa -C '你的邮箱'</code>命令生成秘钥，连续按3个回车，然后你会在<code>C:\Users\你的用户名</code>下的.ssh目录里找到名称为<code>id.rsa</code>的私钥和<code>id.rsa.pub</code>的公钥，然后Github页面里找到你的个人设置下的SSH and GPG keys标签，添加New SSH key，标题名称随意，Key type选择<code>Authentication Key</code>，将<code>id.rsa.pub</code>的内容复制到下面的Key栏中，最后点击Add SSH key，完成添加。添加完成后如下图所示：</p><p><img src="https://s2.loli.net/2022/12/17/YgsnOa8i9QvDBVP.png" alt="生成id秘钥"></p><p><img src="https://s2.loli.net/2022/12/17/1GelvoEBgh6ZzyU.png" alt="添加id-rsa-pub秘钥"></p><p>  然后使用<code>git clone 你复制的地址</code>命令，将远程仓库克隆到本地，使用<code>hexo init</code>命令重新构建hexo目录，安装你之前的主题。</p><blockquote><p>注意：具体主题的升级或安装请参考该主题的文档。</p></blockquote><h2 id="4-配置主题文件">4.配置主题文件</h2><p>  本人使用的是<a href="https://github.com/Molunerfinn/hexo-theme-melody">Melody</a>主题，具体的配置文档可以看<a href="https://molunerfinn.com/hexo-theme-melody-doc/zh-Hans/">这里</a>，这里着重说一下我升级时的重点操作。</p><p>  由于相当于在源码仓库（私有）重新按装了最新版的Hexo，首先要做的就是在Hexo工作目录下找到<code>_config.yml</code>文件，将原来老博客配置里的文件内容逐一进行复制，需要注意的是，将其中的<code>theme</code>配置为<code>melody</code>。将<code>depoly</code>中<code>repository</code>地址填写为<code>git@github.com:你的用户名/你的用户名.github.io.git</code>，具体地址可以在博客仓库（公开）Code页面下的<code>SSH</code>中找到。</p><p>  我当前的Hexo版本为6.3.0，所以主题的配置文件位置发生了变化，在Hexo工作目录下面新建一个名为<code>_config.melody.yml</code>的配置文件，将老版本主题配置文件中的内容复制到新的配置文件中（也可以对照着配置文档对配置文件逐一修改），老版本的配置文件具体位置在<code>./themes/melody/melody.yml</code>中。</p><p>  本人重新安装了Markdown渲染器、emoji渲染器等个性化设置，这一步我就不做赘述了，各位看官按照自己的实际情况进行配置。</p><h2 id="5-添加工作流文件">5.添加工作流文件</h2><p>  这里简单介绍一下Github Actions。Githu Actions是Github于2018年10月推出的持续集成服务。相比于Travis Cl，它是免费的，并且支持私有仓库。它允许开发者把每个操作写成独立的脚本存放在仓库中，可以由其他人进行引用。当你需要执行某个 action时，不必自己写复杂的脚本，直接引用他人写好的 action 即可，并且可以引用对多个，这样你就有了一个action的组合，达到事半功倍的效果。</p><p>  Github Actions有一些基本概念：</p><ul><li><p>workflows（工作流程）：指一个可配置的自动化过程，如更新一次博客所有操作的集合，就是一个工作流程。</p></li><li><p>events（事件）：事件是存储库中触发工作流程运行的特定活动</p></li><li><p>jobs（任务）：指工作流中在同一运行器上执行的一组步骤，一个工作流程中可以包含一个或者多个任务。</p></li><li><p>steps（步骤）：执行任务时的具体操作，一个任务中包含一个或多个步骤。</p></li><li><p>actions（操作）：操作是用于 GitHub Actions 平台的自定义应用程序，它执行复杂但经常重复的任务。一个步骤中可以包含一个或多个操作。</p></li><li><p>runners（运行程序）：运行程序是触发工作流时运行工作流的服务器，通常是Github提供的虚拟机。</p></li></ul><p>  下面介绍如何添加工作流文件，首先需要在你的Hexo工作目录下面创建<code>.github\workflows</code>文件夹，在下面添加新建一个名为<code>depoly.yml</code>的文件，然后前往Github搜索Hexo部署的workflow项目，这里推荐使用<a href="https://github.com/sma11black/hexo-action">sma11black / hexo-action</a>项目，是专门为Hexo部署写的工作流，将下列代码复制到你的<code>depoly.yml</code>中，并修改进行一下的修改：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">name: Deploy</span><br><span class="line"></span><br><span class="line">on: [push]</span><br><span class="line"></span><br><span class="line">jobs:</span><br><span class="line">  build:</span><br><span class="line">    runs-on: ubuntu-latest</span><br><span class="line">    name: A job to deploy blog.</span><br><span class="line">    steps:</span><br><span class="line">    - name: Checkout</span><br><span class="line">      uses: actions/checkout@v1</span><br><span class="line">      with:</span><br><span class="line">        submodules: true # Checkout private submodules(themes or something else).</span><br><span class="line">    </span><br><span class="line">    # Caching dependencies to speed up workflows. (GitHub will remove any cache entries that have not been accessed in over 7 days.)</span><br><span class="line">    - name: Cache node modules</span><br><span class="line">      uses: actions/cache@v1</span><br><span class="line">      id: cache</span><br><span class="line">      with:</span><br><span class="line">        path: node_modules</span><br><span class="line">        key: $&#123;&#123; runner.os &#125;&#125;-node-$&#123;&#123; hashFiles(&#x27;**/package-lock.json&#x27;) &#125;&#125;</span><br><span class="line">        restore-keys: |</span><br><span class="line">          $&#123;&#123; runner.os &#125;&#125;-node-</span><br><span class="line">    - name: Install Dependencies</span><br><span class="line">      if: steps.cache.outputs.cache-hit != &#x27;true&#x27;</span><br><span class="line">      run: npm ci</span><br><span class="line">    </span><br><span class="line">    # Deploy hexo blog website.</span><br><span class="line">    - name: Deploy</span><br><span class="line">      id: deploy</span><br><span class="line">      uses: sma11black/hexo-action@v1.0.4  \\这里改成1.0.4</span><br><span class="line">      with:</span><br><span class="line">        deploy_key: $&#123;&#123; secrets.HEXO_DEPLOY_KEY &#125;&#125;  \\这里改成源码仓库部署的秘钥的名称</span><br><span class="line">        user_name: your github username  \\这里填写你的用户名</span><br><span class="line">        user_email: your github useremail  \\这里填写你的邮箱</span><br><span class="line">        commit_msg: $&#123;&#123; github.event.head_commit.message &#125;&#125;  # (or delete this input setting to use hexo default settings)</span><br><span class="line">    # Use the output from the `deploy` step(use for test action)</span><br><span class="line">    - name: Get the output</span><br><span class="line">      run: |</span><br><span class="line">        echo &quot;$&#123;&#123; steps.deploy.outputs.notify &#125;&#125;&quot;</span><br></pre></td></tr></table></figure><p>  修改完成后将你原来博客文章等其他页面的源码复制到本地仓库，删除Travis Cl的部署文件，使用如下命令更新远程仓库，你的源码仓库（私有）就会根据脚本自动同步到你的博客仓库（公开）了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add *</span><br><span class="line">git commit -m &quot;更新内容&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>  最终调试的结果和进度都会在仓库的Actions标签下看到，如图所示：</p><p><img src="https://s2.loli.net/2022/12/17/Qb6rkofLOuYWJA2.png" alt="调试结果">  然后就大功告成了，可以愉快的更新自己的博客了，并且还是免费的！😉😉😉</p><h2 id="写在最后">写在最后</h2><p>  由于这篇日志隔了一段时间，大多是凭着自己的记忆写的，可能会存在一些纰漏，同时也是给自己做一个备份，以免时间长了忘记。所以这篇文章算是参考，如果在迁移过程中出现一些意外情况请善用搜索引擎，毕竟咱也不是特别专业的，都是兴趣使然，也请大家对这篇文章的不足之处进行谅解。</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo - 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的2020年个人总结</title>
      <link href="/2020/12/30/My-2020-Personal-Summary/"/>
      <url>/2020/12/30/My-2020-Personal-Summary/</url>
      
        <content type="html"><![CDATA[<p>  2020年就要结束了，打开自己的博客，发现什么今年什么都没更新，有点尴尬，眼看正好年底了，可以借这个机会更新我下博客（<s>内心狂喜</s>），于是说一说我的2020年个人总结。<br>  其实对我来说，今年是如同白开水一般平淡，平淡到几乎没有什么东西让我去写，也可能是我没有抓住日常生活中的趣事，出了工作、吃饭、睡觉、游戏之外，好像再无事可做，日常都是以上动作的重复，下班之后回到家什么都不想干，一天天就这么过去了，写到这，突然想到一首歌《寥寥此生虚度》，尽管如此，还是把今年回顾一下吧，好留下点什么。<span id="more"></span></p><ul><li><p>1月：除了疫情，没有什么能让人回想起来的事情。</p></li><li><p>2月：因为群友的邀请，去下载了VRchat玩，或许是疫情原因吧，里面的人很多，然后偶然间认识了一个妹子，然后比较聊的来，聊了很多事情，周末经常聊到2-3点，印象比较深刻，只是妹子开学了，再也没有上过线23333。不过我比较喜欢里面的电影房，自己创建一个房间，看看番，补补电影之类的，很有氛围。后来朋友也很少上线，就没有玩下去的动力了。</p></li><li><p>3月：上个月买的《GJ部》的轻小说到了，一共9卷，这部轻小说号称四格轻小说，意思是读这本轻小说如同读四格漫画一样轻松。动漫不用说，已经看了好几遍了，确实很有意思，画风很萌，故事剧情轻松，尤其是男主的“俺超人”形态，画风都变了2333。片头曲刚开始听的不习惯，后面越听越有感觉，4个片尾曲也都非常好听，出于以上原因，打算收藏一套完整的小说，2月份下的单，3月份到的货，让人惊讶的是，收到的书里好几本都是初回限定版，可能是库存的书吧，毕竟都是好多年前的作品了，不过总的来说，还是比较幸运的，下面就附上一张合影图吧。</p><p><img src="https://i.loli.net/2021/01/01/fmyUIKoOTLRaDck.jpg" alt=""></p></li><li><p>4月：没有什么能让人回想起来的事情。</p></li><li><p>5月：在这个月补了许多老番，印象最深刻的一部就是《フォトカノ》，译作《写真女友》或者《恋曲写真》，讲述的是男主用相机来记录下不同性格的女孩子的动人瞬间，加深细致的作画，精良的音乐以及准确的情感把握，看完直接让我ドキドキ❤️了。尤其是最后社长对男主说的那句“在不断被覆盖的记忆中，只有照片才能将那时的思念永远的截取下来”台词，深深的烙进了我的心里。后面进行进一步了解，发现这个动漫是游戏改，不过游戏是发售在PSP平台上的，貌似没有汉化，于是没去玩游戏。总的来说，个人认为动漫的水平高于游戏的水平，虽然由于篇幅的限制，剧情上不是特别完整，但整体来说确实是一部质量很高的番剧，然人回味无穷。看完后，我觉的我应该有一台单反相机，来记录生活中的美，动画好像是由佳能赞助的，男主用的相机就是佳能的，不得不说这广告真是硬核，推荐没有看的小伙伴去看看。</p><p><img src="https://i.loli.net/2020/12/31/SUsM2PD8tqakj63.jpg" alt=""></p></li><li><p>6月：没错，我把当时心里的想法付诸实践了，花了约8000大洋入手了尼康的7500D套机。其实早在10多年以前，在我还上高中的时候就想拥有一台单反相机，奈何家里不给买只好作罢。这次趁着看完写真女友的那股劲，入手了这台单反相机。至于为什么选择了尼康，其实源于在高中时某次看《天文爱好者》这本杂志时，第一次见到了这个相机的牌子，便在心中种下了草，并且摄影圈中流传着这样一句俗语：“尼康锐，佳能媚，宾得色彩惹人醉”。后来了解了一下，尼康适合于拍摄风景，佳能适合人物，我才明白为何大部分照相馆或影楼里的相机都是佳能的。反正也没用妹子让我拍（我🍋了​)，还不如拍拍风景啥的，还可以拍拍星空，抱着这种心态，入手了这部单反相机，说实话，买来以后感觉整个人精神了，走路也有劲了，这次购物让我足足高兴了大半个月​。</p></li><li><p>7月：接上个月，相机买来之后我就在规划这个相机怎么用，拍摄一般的照片不用说，其实我更想用它来拍摄星空。于是我翻阅各种资料、文章来学习了解相关知识，从一般的星空拍摄到天文改机，再到黑白CCD，看了一眼价格，动辄1-2万，然后我意识到自己太膨胀了，连这样的东西都敢看，不过话说回来，确实受益匪浅，只是从硬件上来看，走的路还很长。</p></li><li><p>8月：由于我以前有一台米德LXD75折射天文望远镜，现在想着正好利用这个望远镜，观测一下星空。但是观测的前提条件是要有准确的导星系统，望远镜标配只给了一个寻星镜，现在都0202年了，大多数爱好者都用上导星镜了，利用电脑进行导星，确保赤道仪追踪准确，看来还得买一些设备啊。于是上了万能的某宝，花了800多买了一个QHY5L-II-M导星相机，又买了一个米德的移动电源，在加上其他七七八八的转接环、倍镜等东西，前后花了1400大洋。后来发现我的赤道仪上是4pin接口，而导星相机是6pin，因此导星相机只能接到笔记本上，然后让笔记本再和赤道仪连接，将导星指令发送给赤道仪，为此还买了一台4pin转USB接口的线。在闲鱼上花了200多买了一个60mm的导星镜，只是卖家给我少发了两颗螺丝，导星镜装不上去，只好暂时搁置，等卖家给我补货。</p></li><li><p>9月：这个月是在等待中度过的，卖家竟然给我忘记了给我发螺丝，在9月末，终于收到了我的螺丝，剩下的就是找个时间调试一下。</p></li><li><p>10月：这个月堪称噩梦，无尽的加班，因为单位上项目的事情，一直盯着项目进度，从1号到11号，我一天都有没有休息，每天盯到半夜2点多，整个人都感觉飘了，然后又是无尽的加班。</p></li><li><p>11月：不说了，都是泪，还是加班，一天到晚忙不完的事情，哦对了，自己一个人去看了《未来的未来》首映，看完之后心里有种说不出的感觉，没办法来用语言来形容，不过。</p></li><li><p>12月：说实话，这个月还是很忙，基本上有一半的时间回家都很晚了，每天忙不完的事情，写不完的报告，感觉时间过的飞快，直到前几天，我才想起来博客已经一年没有更新了，写写我的2020年总结。</p><p>  2020年即将离去，这一年夹杂着太多的欢乐、悲伤和郁闷，感觉什么都没有做，心中竟不免有些不舍，或许是因为感到时光匆匆不再有，也或许是对今年没有让自己满意的成绩，从而带来的是更多的懊恼，但是面对即将来临的2021年，希望能在新的一年中作出一些成绩，让快乐更多一些，让自己更充实一些。就说这么多吧，后面的事谁都说不上，自己加油吧。</p><p>  祝各位在新的一年里，心想事成，事事顺心。</p><p><img src="https://i.loli.net/2021/01/01/l4HpcPejruJFWUE.jpg" alt=""></p><p>最后的最后，GoodBye 2020，Hello 2021。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的2019年个人总结</title>
      <link href="/2019/12/25/My-2019-Personal-Summary/"/>
      <url>/2019/12/25/My-2019-Personal-Summary/</url>
      
        <content type="html"><![CDATA[<p>  呀～～不知不觉间，2019年已接近尾声，马上就要迎来崭新2020年（<s>群穷人，被消灭前再来看一眼.jpg</s>)。就像是在课堂上不小心打了个盹，猛然醒来后发现已是黄昏，只能感叹一天又过去了。虽然说过博客会更新一些日常和技术文章，但是发现我的根本就拿不出手来嘛！（好气哦～）不过，一年即将过去，总得在博客上留下点什么，索性写一篇自己的2019年总结，为自己过去的365天画上一个句号。<span id="more"></span></p><p>  对我来说，2019年是平凡的一年，虽平平淡淡，但也有一些可圈可点令人开心的事情，我想这可能是大多数社畜们的总基调吧。我的生活中除了工作睡觉打游戏以及简单的社交外，基本上没有其他的额外内容了。不过每周一次和同学或同事出去吃饭是一件非常放松以及快乐的事情，不管是抱怨工作中的不爽，还是大开脑洞的吹B，都是一件非常享受的事情，也是我<a href="https://flag.life/point">幸福点数</a>的主要来源。父母和自己的身体都还健康，没有得什么大病，也是一件很幸福的事情，同时希望父母和自己的身体永远健康。</p><p>  前段时间想体验下智能手表，在双11期间入手了一块港版蜂窝版Apple Watch 5并开通了心电图功能，总的感觉来说体验还是非常好的。由于我比较宅，目前主要用于睡眠监测和当作手机的延伸，只能说真的很赞，能在手表上解决的事情都不用拿手机了，做事情更加的得心应手。安装了睡眠监测软件后，发现自己更加注重自己的健康了，虽然大多数时间没有遵循软件给出的睡眠指导，但是在心理上感觉自己更加健康了23333。本人居住在十八线的小城市里，目前享受不到一号双终端的服务，虽然用不上，但是这个功能不能没有，说不定哪天就用上了对不，只是不知道能不能在这块表退役前用上这个功能。</p><p>  今年和同学去看了《天气之子》的首映，作画和歌曲都非常的好，看完之后我反手就订了《你的名字》的BD，嗯，真香！虽然《天气之子》有很多优点，但是无奈在开头就猜中了结局，所以感觉平淡奇奇，有些乏味，没有《你的名字》剧情转折时让人惊呼卧槽的感觉。不过《天气之子》中男主在上天（笑）前的那段剧情真的很不错，有点小感动，那颗为了拯救女主的决心不管看多少次都觉得感动。电影的结尾很有意思，那种为了自己而活的感觉也很好，算是一个不同寻常的结尾吧。总体来说，满分10分的话，我给7分，不知道是不是因为经历过社会的毒打，逐渐变的现实，才会对这类的剧情不太感冒，谁知道呢？</p><p>  其实还想再写点的，但都是一些生活琐事，食之无味，弃之有肉，就不一一道来了。回顾即将过去的一年，喜怒哀乐轮番上演，组成了名为生活的乱麻，此时虽感到百感交集，但是一觉醒来后，仍像没事人一样继续工作吃饭睡觉娱乐，好不自在呢～总之，一切向前看。</p><p>  感谢父母，感谢朋友，感谢同事，感谢沙雕群友，感谢正在浏览文章的你。（貌似写了一篇不是总结的总结呢，小声bb）</p><p>  最后，Good Bye 2019，Hello 2020。</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/04/04/Hello-World/"/>
      <url>/2019/04/04/Hello-World/</url>
      
        <content type="html"><![CDATA[<p>  其实很早就有了建立自己博客的想法，但是拖延症导致了我一直没有去付诸行动，这一拖就是一年，这次终于下定决心创建自己的博客。经过几天的折腾，才将这个这个博客搭建出来，由于水平有限，博客还有很多不足，希望偶尔进入这个博客的你能够多多包涵。<span id="more"></span></p><p>  我将在这个博客发表一些日常和技术方面的新的体会，欢迎提出建议和批评指正。同时欢迎交换友链 😊</p><p>  最后，国际惯例，Hello World！</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于我</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<p>  来自互联网的旅行者，我是丹羽真，欢迎光临我的博客。我的博客打算更新一些日常和技术方面的文章，因为随缘更新，可能没有多少内容，还请各位看官多多包涵。<br>  本博客搭建在GitPage上，博客框架为<a href="https://hexo.io">Hexo</a>，使用的主题为<a href="https://github.com/Molunerfinn/hexo-theme-melody">Melody</a>，这是一款非常好看的主题，强烈推荐给大家，同时也感谢作者@<a href="https://molunerfinn.com">Molunerfinn</a>的辛勤付出！<br>  评论系统用的是Disqus,在中国境是内被屏蔽的，请借助科学上网查看，否则我也没办法啦（摊手）<br>  下面是我的一些小介绍，能够帮助你全面的了解我，请慢慢浏览吧～～</p><hr><ol><li>这个介绍方法是借鉴别人的</li><li>天文爱好者，当过学校的天文台台长</li><li>ACGN爱好者，已毕业</li><li>万年鱼塘局dotaer，从2007年玩到现在，越玩越菜（已成云玩家）</li><li>前字幕组成员，职位为时间轴+特效，因受到字幕组提供的便利，便投入到字幕组中去，目前已退出</li><li>上班族，日子过得相对悠闲</li><li>擅长网络方面的知识（或许吧～），在大学期间接受过CCIE培训及考试，差一点考过</li><li>因为做轴的缘故，能稍微听懂一点点日文，但是只能看懂五十音图</li><li>兴趣爱好广泛，比如天文、物理、编程、音乐，历史</li><li>喜欢看鬼畜视频。</li><li>人格类型为INTJ</li><li>不擅长人际交往，熟人面前话多，陌生人面前一言不发</li><li>最崇拜的科学家是特斯拉和爱因斯坦</li><li>最喜欢的动画是《电波女与青春男》，小说也是</li><li>我的ID来自于《电波女与青春男》主人公</li><li>始终相信秒速0.00000000198厘米</li><li>喜欢新房昭之的动画风格，尤其是分镜</li><li>养着一只名为可乐的猫，是地下室捡来的，后来不小心从阳台上摔下去后变成了残疾，猫猫已于21年11月去世😢</li><li>不喜欢人多的地方，因此比起出去，更喜欢呆在家里</li><li>喜欢吃甜食，冷饮，口味偏咸和辣，不喜欢吃酸的东西，为了能吃到甜食愿意自己动手制作</li><li>但是我不胖，体重140-150斤</li><li>有收藏的习惯，对于用的时间长的东西舍不得丢掉</li><li>目前最大的心愿是能编程入门，钢琴入门（已持佛系态度）</li><li>口头禅：大佬牛逼，大佬强无敌</li><li>有生之年想去南极玩一圈</li><li>不抽烟不喝酒，能喝饮料，极限2L</li><li>Dota里喜欢玩辅助，因为可玩性更高，更有趣，正因为这样，一直在鱼塘底部</li><li>最喜欢的英雄是艾欧，有了至宝之后读作IO写作工口（笑）</li><li>最欣赏的Dota战队是Wings（世界名画：我ban尼玛啊！）</li><li>认为CN DOTA已死</li><li>54（你懂的~</li><li>比较青睐金色长发、蓝瞳、后辈、傲娇（娇大于傲）的动漫女生</li><li>资历很浅的一名绅士，个人觉得能看到绝对领域和抬起双手能看到水手服上衣和裙子之间部分的女生最可爱</li><li>手机喜欢IOS系统，电脑还是习惯Windows，虽然正在向Linux发展</li><li>第一次玩黄油被剧情感动哭了（不要在意这些细节）</li><li>喜欢的女声优是花泽香菜、井口裕香、早见纱织、户松遥、大龟明日香</li><li>喜欢的男声优有入野自由、杉田智和</li><li>听歌只要觉得旋律好听就会收藏，歌词能引起共鸣就更好啦</li><li>童年女神是瑶玲，当时我还买了DVD呢</li><li>入了一个偶像大师的手办和BD，你的名字的BD（偶像大师动画太励志了，N刷）</li><li>域名flag.life是因为我身边的朋友经常在立flag（我也有，不过比较少），所以就把这个域名买下来了</li><li>羞耻心比较强，sbeam抽奖中了一个抱枕也送人了（18R的），家里有人的时候不敢玩美少女游戏</li><li>没有youtube、twitter、facebook等账号，主要是用不上</li><li>对GFW又爱又恨</li><li>习惯使用QQ，因工作被迫使用微信，觉得最方便的是telegram</li><li><s>崩崩崩真好玩，就是肝比较疼</s>（兔女郎事件后已弃）</li><li>rm -rf /* （滑稽）</li><li>有时候有点中二，不过感觉还是不错的</li><li>已准备结婚</li><li>喜欢咬我家猫的鼻子和耳朵，感觉很好玩hahaha（现在想来有点伤心）</li><li>绝不当舔狗</li><li>认同女本位主义，真相一旦入眼，便无法视而不见</li><li>红丸意识觉醒，但不彻底（毕竟牵绊的东西太多）</li><li>最喜欢的电影是《星际穿越》</li><li>英特纳雄耐尔，一定会实现</li></ol><hr><p><strong><p align="right">更新于2022.10.3<p></strong></p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>幸福点数</title>
      <link href="/point/index.html"/>
      <url>/point/index.html</url>
      
        <content type="html"><![CDATA[<p>  来说一下幸福点数吧，原本叫青春点数，出自轻小说《电波女与青春男》，自己原来的基础上稍微做了一点点修改（我的青春早已逝去，稍微拓展延伸了下）。幸福点数是指在日常生活中体验到幸福的同时所获得的点数，单次获得的最大点数为5，具体是什么样的就让我来举些例子吧：</p><ul><li><p>首先是1点，是指当时很开心，但之后回忆起来并没有感觉能留下什么回忆的事件，平时只要稍加留意，就能获得的点数，比如：喝饮料的时候中了再来一瓶、和朋友们进行了一次很开心的聚会等等。但是，如果不注重日常的积累，幸福点数会随之下降。</p></li><li><p>接下来是2点，是指在上面的基础上，增加了一些特殊的条件。以和朋友聚会为例，只要加上了「生日」、「外出」等特殊条件，就可以获得2点幸福点数，因为这些回忆能使自己在较短一段时间内仍然能感到幸福和快乐。所以，如果说1点是基础的话，2点就是应用。</p></li><li><p>谈到3点的行动，是指在成功率里掺杂了一些不确定因素，虽然不容易把握到关键因素，但是一旦把握到这个点，甚至可以扭转整个局势。比如：和心仪的女孩约会，这足以拿到3分，但是要时刻留意女孩子的心思，稍不留意，就有可能变成好人（笑），从而前功尽弃。</p></li><li><p>4点的分数主要来自于一些对自己来说有很大意义的活动，比如去现场观看了一次Dota2 TI的赛事，自己被现场的氛围所感染，此时自己的身心得到了极大的满足，觉得没有遗憾了，那么你就得到了4分。毕竟对于我来说，能够去现场看比赛的次数还是屈指可数的（<s>没错，贫穷限制了我的一切</s>），所以说要倍加珍惜。</p></li><li><p>就某种意义来说，5分在很大程度上受到个人想法的左右，不再与现实相符。具体表现为当你看到一件事物的时候脑海中毫不犹豫的蹦出“就是它！”、“如果这样的话我此生无憾”的想法，对于你来说，这是你这辈子宝贵的财富，这份回忆，足以让你一生品味。</p></li></ul><p>  虽然这笔储蓄对升职和加薪并没有什么价值，但是在临终之时获得的满足感会比其他普通人有天壤之别，因为人生的整个「过程」就是为了这个「结果」而存在的，如果你的幸福点数足够的高，你将度过一个「毫无遗憾」的人生。所以，为美好的人生献上祝福！</p><p><strong><p align="right">2019.04.05 </p></strong></p><hr><ul><li><strong>（2019.04.05）有了属于自己的博客  +2</strong></li><li><strong>（2019.05.02）小长假和朋友去了丹霞地貌和平山胡大峡谷  +2</strong></li><li><strong>（2019.05.04）因为爬山导致腰酸背痛  -1</strong></li><li><strong>（2019.05.10）一直出差一直爽（四天）  +1</strong></li><li><strong>（2019.10.07）过了人生的第28个生日   +2</strong></li><li><strong>（2019.11.11）入手了apple watch 5   +2</strong></li><li><strong>（2019.11.11）入手了《你的名字》BD   +1</strong></li><li><strong>（2019.12.18）腹痛去了急诊   -2</strong></li><li><strong>（2019.12.26）工作繁忙心情不爽   -2</strong></li><li><strong>（2020.03.14）买的《GJ部》轻小说到了，有几本初回限定版  +1</strong></li><li><strong>（2020.06.20）有了自己的单反相机  +3</strong></li><li><strong>（2020.08.10）添置了导星相机等天文望远镜配件  +2</strong></li><li><strong>（2020.09.15）没有时间去进行观测  -2</strong></li><li><strong>（2020.09.25）过了人生第29个生日  +2</strong></li><li><strong>（2020.10.11）无尽的加班  -2</strong></li><li><strong>（2020.11.06）独自一人去看了《未来的未来》首映  +1</strong></li><li><strong>（2020.12.15）工作诸事不顺，心情烦闷  -2</strong></li><li><strong>（2020.12.31）博客一年没有打理，造成幸福点数下降  -3</strong></li><li><strong>（2021.11.15）恋爱不顺，介绍的相亲对象，最后发现都是套路  -3</strong></li><li><strong>（2021.11.30）陪伴了我四年的猫咪可乐去世了  -5</strong></li><li><strong>（2021.12.10）认识了现任女友，去看了《星际穿越》  +3</strong></li><li><strong>（2022.01.24）入手了华为matepad11  +2</strong></li><li><strong>（2022.01.25）自己动手购买并组装了NAS  +1</strong></li><li><strong>（2022.01.30）搬进了自己的房子  +2</strong></li><li><strong>（2022.07.31）久违的去了一趟祁连山游玩  +1</strong></li><li><strong>（2022.08.06）和女友计划结婚了  +3</strong></li><li><strong>（2022.09.25）人生第一次出车险，车门的漆被蹭掉一点，mmp  -3</strong></li><li><strong>（2022.10.03）发布了爱情树页面，见证我们的爱情  +2</strong></li><li><strong>（2022.10.04）双喜临门，和女友订婚啦，并且热闹的过了第31个生日  +4</strong></li><li><strong>（2022.11.18）因为疫情，又开始静默了，不知什么时候能回家  -2</strong></li><li><strong>（2022.12.06）连续上了22天班，今天终于解封了  +1</strong></li><li><strong>（2022.12.15）在雪花点缀的幸福氛围下，和女友领证结婚了  +5</strong></li></ul><hr><p><strong><p align="right">目前的幸福点数为： +16</p></strong></p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
